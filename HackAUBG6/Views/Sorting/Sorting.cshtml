@model IEnumerable<HackAUBG6.Core.Models.BillIdViewModel>

@{
    ViewBag.Title = "All Events";
}


<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="text-center row">

    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">Bill Identifier</th>
                <th scope="col">Product Name</th>
                <th scope="col">Product Price</th>
                <th scope="col">Product Quantity per Order</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bill in Model)
            {
                foreach (var order in bill.Orders)
                {

                    <tr>
                        <th scope="row">@bill.BillId</th>
                        <td>@order.ProductName</td>
                        <td>@order.ProductPrice</td>
                        <td>@order.Quantity lv.</td>
                    </tr>


                }
            }
        </tbody>
    </table>














    @*
    <div style="height: 100%" id="myGrid" class="ag-theme-quartz"></div>

    <script>
    var checkboxSelection = function (params) {
    // we put checkbox on the name if we are not doing grouping
    return params.api.getRowGroupColumns().length === 0;
    };
    var headerCheckboxSelection = function (params) {
    // we put checkbox on the name if we are not doing grouping
    return params.api.getRowGroupColumns().length === 0;
    };
    const columnDefs = [
    {
    field: "Product",
    minWidth: 170,
    checkboxSelection: checkboxSelection,
    headerCheckboxSelection: headerCheckboxSelection,
    },
    { field: "name" },
    { field: "quantity" },
    { field: "price" },
    ];

    var autoGroupColumnDef = {
    headerName: "Group",
    minWidth: 170,
    field: "athlete",
    valueGetter: (params) => {
    if (params.node.group) {
    return params.node.key;
    } else {
    return params.data[params.colDef.field];
    }
    },
    headerCheckboxSelection: true,
    cellRenderer: "agGroupCellRenderer",
    cellRendererParams: {
    checkbox: true,
    },
    };

    let gridApi;

    const gridOptions = {
    defaultColDef: {
    editable: true,
    enableRowGroup: true,
    enablePivot: true,
    enableValue: true,
    filter: true,
    flex: 1,
    minWidth: 100,
    },
    suppressRowClickSelection: true,
    groupSelectsChildren: true,
    // debug: true,
    rowSelection: "multiple",
    rowGroupPanelShow: "always",
    pivotPanelShow: "always",
    columnDefs: columnDefs,
    pagination: true,
    autoGroupColumnDef: autoGroupColumnDef,
    };

    // setup the grid after the page has finished loading
    document.addEventListener("DOMContentLoaded", function () {
    var gridDiv = document.querySelector("#myGrid");
    gridApi = agGrid.createGrid(gridDiv, gridOptions);

    fetch("https://www.ag-grid.com/example-assets/olympic-winners.json")
    .then((response) => response.json())
    .then((data) => gridApi.setGridOption("rowData", data));
    });
    </script>*@
